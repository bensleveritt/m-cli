#!/usr/bin/env bash

source "$( dirname "${BASH_SOURCE[0]}" )/../lib/defaults.sh"
source "$( dirname "${BASH_SOURCE[0]}" )/../lib/helpers.sh"

help(){
    cat<<__EOF__
    usage: m dock [
                    enable              |
                    disable             |
                    activeindicators    |
                    bounceonappactivity |
                    bounceonapplaunch   |
                    autohidedelay       |
                    autohidespeed       |
                    autohide            |
                    magnification       |
                    magnificationsize   |
                    iconsize            |
                    position            |
                    addblankspace       |
                    addrecentitems      |
                    prune               |
                    help
                  ]

    Examples:
      m dock enable                 # Shows the Dock
      m dock disable                # Causes the Dock to be hidden and never reappear
      m dock activeindicators YES   # Show the active indicators under the app icons
      m dock bounceonappactivity    # Bounce an app's icon when it has activity
      m dock bounceonapplaunch      # Bounce an app's icon when it is launching
      m dock autohidedelay x.x      # Changes how long the Dock takes to show up when auto-hide is enabled
      m dock autohidespeed x.x      # Changes how long the Dock takes to slide into/out of view after the
                                    # delay has expired
      m dock autohide YES           # Enable Dock's auto hide feature
      m dock autohide NO            # Disable Dock's auto hide feature
      m dock magnification YES      # Turn magnification on
      m dock magnification NO       # Turn magnification off
      m dock magnificationsize x    # Set the max size of the icons as the cursor gets closer to them
      m dock iconsize x             # Set the size of the icons when the dock is at rest
      m dock position BOTTOM        # Change Dock's position to the bottom of the screen
      m dock position LEFT          # Change Dock's position to the left of the screen
      m dock position RIGHT         # Change Dock's position to the right of the screen
      m dock addblankspace          # Add a blank space (separator) to the Dock
      m dock addrecentitems         # Add a stack containg your recent items to the Dock
                                    # (You can change the stack's type by right clicking on it)
      m dock prune                  # Remove all items from dock
__EOF__
}

enable(){
  auto_hide "NO"
  show_delay 0.25
}

disable(){
  auto_hide "YES"
  show_delay 999999
}

active_indicators(){
    local choice="$(_mcli_yes_no_to_boolean "$1")"

    defaults write com.apple.dock show-process-indicators -bool "${choice}"

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_boolean "com.apple.dock" "show-process-indicators")"

    echo "Dock activeindicators: ${value}"
}

bounce_on_app_activity(){
    local choice="$(_mcli_yes_no_to_inverted_boolean "$1")"

    defaults write com.apple.dock no-bouncing -bool "${choice}"

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_inverted_boolean "com.apple.dock" "no-bouncing")"

    echo "Dock bounceonappactivity: ${value}"
}

bounce_on_app_launch(){
    local choice="$(_mcli_yes_no_to_inverted_boolean "$1")"

    defaults write com.apple.dock launchanim -bool "${choice}"

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_boolean "com.apple.dock" "launchanim")"

    echo "Dock bounceonapplaunch: ${value}"
}

auto_hide_speed(){
    case $1 in
        [0-9][.][0-9])
            defaults write com.apple.dock autohide-time-modifier -float $1
            ;;
        [0-9])
            defaults write com.apple.dock autohide-time-modifier -int $1
            ;;
    esac

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_number "com.apple.dock" "autohide-time-modifier")"

    echo "Dock autohidespeed: ${value}"
}

auto_hide_delay(){
    case $1 in
        [0-9][.][0-9])
            defaults write com.apple.dock autohide-delay -float $1
            ;;
        [0-9])
            defaults write com.apple.dock autohide-delay -int $1
            ;;
    esac

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_number "com.apple.dock" "autohide-delay")"

    echo "Dock autohidedelay: ${value}"
}

auto_hide(){
    local choice="$(_mcli_yes_no_to_boolean "$1")"

    defaults write com.apple.dock autohide -bool "${choice}"

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_boolean "com.apple.dock" "autohide")"

    echo "Dock autohide: ${value}"
}

magnify(){
    local choice="$(_mcli_yes_no_to_yes_no "$1")"

    defaults write com.apple.dock magnification -boolean "${choice}"

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_boolean "com.apple.dock" "magnification")"

    echo "Dock magnification: ${value}"
}

magnification_size(){
    case $1 in
        [0-9]*)
            defaults write com.apple.dock largesize -int "$1"
            ;;
    esac

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_number "com.apple.dock" "largesize")"

    echo "Dock magnificationsize: ${value}"
}

icon_size(){
    case $1 in
        [0-9]*)
            defaults write com.apple.dock tilesize -int "$1"
            ;;
    esac

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read_number "com.apple.dock" "tilesize")"

    echo "Dock tilesize: ${value}"
}

dock_position(){
    case $1 in
        [bB][oO][tT][tT][oO][mM])
            defaults write com.apple.dock orientation bottom
            ;;
        [lL][eE][fF][tT])
            defaults write com.apple.dock orientation left
            ;;
        [rR][iI][gG][hH][tT])
            defaults write com.apple.dock orientation right
            ;;
    esac

    [ -n "$1" ] && killall Dock

    value="$(_mcli_read "com.apple.dock" "orientation")"

    echo "Dock position: ${value}"
}

add_blank_space(){
    echo "New blank space added to the Dock"
    defaults write com.apple.dock persistent-apps -array-add '{"tile-type"="spacer-tile";}'
    killall Dock
}

add_recent_items(){
    echo "Add recent items stack"
    defaults write com.apple.dock persistent-others -array-add '{"tile-data" = {"list-type" = 1;}; "tile-type" = "recents-tile";}';
    killall Dock
}

prune(){
    echo "remove all items from the Dock"
    defaults write com.apple.dock checked-for-launchpad -bool true
    defaults write com.apple.dock persistent-apps -array ""
    defaults write com.apple.dock persistent-others -array ""

    rm -f ${HOME}/Library/Application\ Support/Dock/*.db 2> /dev/null

    killall Dock
}

case $1 in
    help)
        help
        ;;
    enable)
        enable
        ;;
    disable)
        disable
        ;;
    activeindicators)
        shift
        active_indicators $@
        ;;
    bounceonappactivity)
        shift
        bounce_on_app_activity $@
        ;;
    bounceonapplaunch)
        shift
        bounce_on_app_launch $@
        ;;
    showdelay)
        shift
        auto_hide_speed $@
        ;;
    autohidedelay)
        shift
        auto_hide_delay $@
        ;;
    autohidespeed)
        shift
        auto_hide_speed $@
        ;;
    autohide)
        shift
        auto_hide $@
        ;;
    magnification)
        shift
        magnify $@
        ;;
    magnificationsize)
        shift
        magnification_size $@
        ;;
    iconsize)
        shift
        icon_size $@
        ;;
    position)
        shift
        dock_position $@
        ;;
    addblankspace)
        shift
        add_blank_space
        ;;
    addrecentitems)
        shift
        add_recent_items
        ;;
    prune)
        shift
        prune
        ;;
    *)
        help
        ;;
esac

# vim: ts=4 sw=4 softtabstop=4 expandtab
