#!/usr/bin/env bash

source "$( dirname "${BASH_SOURCE[0]}" )/../lib/defaults.sh"
source "$( dirname "${BASH_SOURCE[0]}" )/../lib/converters.sh"

declare command="$(basename "$0")"
declare subcommand="$1"

[ $# -gt 0 ] && shift

help(){
    cat<<__EOF__
    Usage:
      m diskimages automount    [ YES | NO ] # Whether to automount disk images
      m diskimages verification [ YES | NO ] # Whether to verify disk image integrity
__EOF__
}

automount(){
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.frameworks.diskimages" \
                                              "auto-open-ro-root" \
                                              "$1")"

    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.frameworks.diskimages" \
                                              "auto-open-rw-root" \
                                              "$1")"

    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.finder" \
                                              "OpenWindowForNewRemovableDisk" \
                                              "$1")"

    echo "${command} ${subcommand}: ${value}"
}

verification(){
    value="$(_mcli_defaults_yes_no_to_inverted_boolean "com.apple.frameworks.diskimages" \
                                                       "skip-idme" \
                                                       "$1")"

    value="$(_mcli_defaults_yes_no_to_inverted_boolean "com.apple.frameworks.diskimages" \
                                                       "skip-verify" \
                                                       "$1")"

    value="$(_mcli_defaults_yes_no_to_inverted_boolean "com.apple.frameworks.diskimages" \
                                                       "skip-verify-locked" \
                                                       "$1")"

    value="$(_mcli_defaults_yes_no_to_inverted_boolean "com.apple.frameworks.diskimages" \
                                                       "skip-verify-remote" \
                                                       "$1")"

    echo "${command} ${subcommand}: ${value}"
}

case "${subcommand}" in
    help)
        help
        ;;
    automount)
        automount "$@"
        ;;
    verification)
        verification "$@"
        ;;
    *)
        help
        ;;
esac

# vim: ts=4 sw=4 softtabstop=4 expandtab
