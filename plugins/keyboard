#!/usr/bin/env bash

source "$( dirname "${BASH_SOURCE[0]}" )/../lib/defaults.sh"
source "$( dirname "${BASH_SOURCE[0]}" )/../lib/converters.sh"

declare command="$(basename "$0")"
declare subcommand="$1"

[ $# -gt 0 ] && shift

help(){
    cat<<__EOF__
    usage: m keyboard [
                    accentedpress       |
                    spellchecking       |
                    textsubstitution    |
                    usefunctionkeys     |
                    inputfieldaccess    |
                    autodim             |
                    autodimdelay        |
                    keyrepeatrate       |
                    keyrepeatdelay      |
                    help
                  ]

    Examples:
      m keyboard accentedpress    [ YES | NO ]   # Whether to enable press and hold to show accented characters
      m keyboard spellchecking    [ YES | NO ]   # Whether to enable spell check indication (red squiggly lines)
      m keyboard textsubstitution [ YES | NO ]   # Whether to substitute quotes, dashes, spelling corrections, etc automatically
      m keyboard usefunctionkeys  [ YES | NO ]   # Whether to use F1 function keys or alternate function keys (brightness, etc)
      m keyboard inputfieldaccess [              # Specify which input fields can be tabbed through
                                    BASIC                |
                                    ALL_EXCEPT_DROPDOWNS |
                                    ALL
                                  ]
      m keyboard autodim          [ YES | NO ]   # Whether to automatically dim the keyboard brightness when idle
      m keyboard autodimdelay     2              # How long to wait before dimming the keyboard brightness
      m keyboard keyrepeatrate    4              # How quickly a held key repeats
      m keyboard keyrepeatdelay   1.2            # How long a key needs to be held before repeating
__EOF__
}

accentedpress() {
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "ApplePressAndHoldEnabled" \
                                              "$1")"

    echo "${command} ${subcommand}: ${value}"
}

spellchecking() {
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "WebContinuousSpellCheckingEnabled" \
                                              "$1")"

    defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool "${value}"

    echo "${command} ${subcommand}: ${value}"
}

textsubstitution() {
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "NSAutomaticDashSubstitutionEnabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "NSAutomaticQuoteSubstitutionEnabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "NSAutomaticSpellingCorrectionEnabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "WebAutomaticSpellingCorrectionEnabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "WebAutomaticDashSubstitutionEnabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "WebAutomaticTextReplacementEnabled" \
                                              "$1")"

    defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool "${value}"

    echo "${command} ${subcommand}: ${value}"
}

usefunctionkeys() {
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "com.apple.keyboard.fnState" \
                                              "$1")"

    echo "${command} ${subcommand}: ${value}"
}

inputfieldaccess() {
    local mode

    case "$1" in
        [aA][lL][lL])
            mode="3"
            ;;
        [aA][lL][lL]_[eE][xX][cC][eE][pP][tT]_[dD][rR][oO][pP][dD][oO][wW][nN][sS])
            mode="2"
            ;;
        [bB][aA][sS][iI][cC])
            mode="1"
            ;;
    esac

    value="$(_mcli_defaults_integer "NSGlobalDomain" \
                                    "AppleKeyboardUIMode" \
                                    "${mode}")"

    echo "${command} ${subcommand}: ${value}"
}

autodim() {
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.iokit.AmbientLightSensor" \
                                              "Automatic Keyboard Enabled" \
                                              "$1")"

    echo "${command} ${subcommand}: ${value}"
}

autodimdelay() {
    value="$(_mcli_defaults_integer "com.apple.iokit.AmbientLightSensor" \
                                    "Keyboard Dim Time" \
                                    "$1")"

    echo "${command} ${subcommand}: ${value}"
}

keyrepeatrate() {
    value="$(_mcli_defaults_integer "NSGlobalDomain" \
                                    "KeyRepeat" \
                                    "$1")"

    echo "${command} ${subcommand}: ${value}"
}

keyrepeatdelay() {
    value="$(_mcli_defaults_integer "NSGlobalDomain" \
                                    "InitialKeyRepeat" \
                                    "$1")"

    echo "${command} ${subcommand}: ${value}"
}

case "${subcommand}" in
    help)
        help
        ;;
    accentedpress)
        accentedpress $@
        ;;
    spellchecking)
        spellchecking $@
        ;;
    textsubstitution)
        textsubstitution $@
        ;;
    usefunctionkeys)
        usefunctionkeys $@
        ;;
    inputfieldaccess)
        inputfieldaccess $@
        ;;
    autodim)
        autodim $@
        ;;
    autodimdelay)
        autodimdelay $@
        ;;
    keyrepeatrate)
        keyrepeatrate $@
        ;;
    keyrepeatdelay)
        keyrepeatdelay $@
        ;;
    *)
        help
        ;;
esac

# vim: ts=4 sw=4 softtabstop=4 expandtab
